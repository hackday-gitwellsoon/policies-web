name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v2

    - name: Get current time
      uses: josStorer/get-current-time@v2
      id: current-time
      with:
        format: YYYY.MM.DD-HH.mm

    - name: Docker Setup QEMU
      uses: docker/setup-qemu-action@v1.2.0

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v1.6.0

    - name: Log into registry Github Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1.12.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log into registry Dockerhub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1.12.0
      with:
        username: lareeth
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v2.8.0
      with:
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/hackday-gitwellsoon/policies-web:latest
          ghcr.io/hackday-gitwellsoon/policies-web:${{ steps.current-time.outputs.formattedTime }}
          lareeth/gitwellsoon-policies-web:latest
          lareeth/gitwellsoon-policies-web:${{ steps.current-time.outputs.formattedTime }}
        build-args: VCS_REF=`git rev-parse --short HEAD`

    - uses: azure/k8s-set-context@v4
      if: github.event_name != 'pull_request'
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG }}

    - name: Helm tool installer
      if: github.event_name != 'pull_request'
      uses: azure/setup-helm@v4.3.0

    - name: Deploy
      if: github.event_name != 'pull_request'
      run: >
        helm upgrade
        --insecure-skip-tls-verify
        --install policies-web
        --namespace=default 
        --set image.tag=${{ steps.current-time.outputs.formattedTime }}
        --set ingress.hosts[0].host=guidelines.fyi
        --set ingress.hosts[0].paths[0].path=/
        --set ingress.hosts[0].paths[0].pathType=Prefix
        --set ingress.tls[0].secretName=guidelines-fyi-tls
        --set ingress.tls[0].hosts[0]=guidelines.fyi
        ./chart/